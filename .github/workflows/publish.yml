name: Publish

on:
  push:
    tags:
      - 'v**'

jobs:
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 0
        
      - name: Get version from tag
        id: get-version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}

      - name: Restore
        run: |
          dotnet restore "ManagedMmkv/ManagedMmkv.csproj"

      - name: Wait for build workflow
        uses: ArcticLampyrid/action-wait-for-workflow@v1.0.1
        with:
          workflow: build.yml
          sha: ${{ github.sha }}

      - name: Download CMMKV binary (all)
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          workflow_conclusion: success
          commit: ${{ github.sha }}
          name: cmmkv-all
          path: ${{ github.workspace }}/cmmkv/output

      - name: Pack
        run: |
          dotnet pack "ManagedMmkv/ManagedMmkv.csproj" -c Release -o ./MyPackages "/p:Version=${{ steps.get-version.outputs.version }}"

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        if: "${{ env.NUGET_API_KEY != '' }}"
        run: |
          dotnet nuget push "MyPackages/*.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key $NUGET_API_KEY --skip-duplicate
      
      - name: Publish to GitHub releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ github.workspace }}/MyPackages/*.nupkg
            ${{ github.workspace }}/MyPackages/*.snupkg

      - name: Generate release notes
        run: npx changelogithub
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}